@model PerpetualShred.Models.WebVid

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>ReactPlayerTest</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
    <script src="https://unpkg.com/react-player/dist/ReactPlayer.js"></script>
    <script src="https://unpkg.com/screenfull"></script>
</head>
<body>
    <div id="container" style="width: 480px"></div>
    <script type="text/babel">
        class App extends React.Component {
        constructor (props) {
        super(props)
        this.onClickFullscreen = this.onClickFullscreen.bind(this)
        this.state = {
        playing: true
        }
        }
        onClickFullscreen () {
        screenfull.request(ReactDOM.findDOMNode(this.refs.player))
        }
        render() {
        return (
        <div>
            <ReactPlayer ref='player'
                         url="@Html.DisplayFor(model => model.PlayerUrl)"
                         playing={this.state.playing}
                         width='100%'
                         height='100%' />
            <button onClick={() => this.setState({ playing: true })}>Play</button>
            <button onClick={() => this.setState({ playing: false })}>Pause</button>
            <button onClick={this.onClickFullscreen}>Fullscreen</button>
        </div>
        );
        }
        }

        ReactDOM.render(
        <App />,
        document.getElementById('container')
        );
    </script>
</body>
</html>